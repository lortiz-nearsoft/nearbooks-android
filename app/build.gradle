apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'io.fabric'
apply plugin: 'realm-android'
apply plugin: 'com.getkeepsafe.dexcount'

def final nearbooksApplicationId = 'com.nearsoft.nearbooks'
def final nsbooksApplicationId = 'com.nearsoft.nsbooks'

android {
    compileSdkVersion 'Google Inc.:Google APIs:23'
    buildToolsVersion "23.0.3"

    defaultConfig {
        applicationId nearbooksApplicationId
        minSdkVersion 16
        targetSdkVersion 23
        versionCode 33
        versionName "0.0.13.a"

        multiDexEnabled true
        testInstrumentationRunner "com.android.test.runner.MultiDexTestRunner"
    }
    productFlavors {
        nearbooks {
            applicationId nearbooksApplicationId
            resValue "string", "account_type", "${applicationId}.account"
            resValue "string", "authority", "${applicationId}.provider"
            buildConfigField "String", "GOOGLE_SERVER_CLIENT_ID", '"130661059453-56utmg42k7ojq3a3v9sat13noojvm1uq.apps.googleusercontent.com"'
        }
        nsbooks {
            applicationId nsbooksApplicationId
            resValue "string", "account_type", "${applicationId}.account"
            resValue "string", "authority", "${applicationId}.provider"
            buildConfigField "String", "GOOGLE_SERVER_CLIENT_ID", '"995671597719-kmlgpd2qd43kgnqhmsfm7k87lh5s6175.apps.googleusercontent.com"'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile "junit:junit:$junit_version"

    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    kapt "com.android.databinding:compiler:$build_tools_version"

    compile "com.android.support:multidex:$multidex_version"
    compile "com.android.support:appcompat-v7:$support_library_version"
    compile "com.android.support:design:$support_library_version"
    compile "com.android.support:palette-v7:$support_library_version"
    compile "com.android.support:cardview-v7:$support_library_version"
    compile "com.android.support:recyclerview-v7:$support_library_version"

    compile "com.google.android.gms:play-services-auth:$play_services_version"
    compile "com.google.android.gms:play-services-gcm:$play_services_version"

    compile "com.squareup.retrofit2:retrofit:$retrofit_version"
    compile "com.squareup.retrofit2:converter-gson:$retrofit_version"
    compile "com.squareup.retrofit2:adapter-rxjava:$retrofit_version"
    compile "com.squareup.okhttp3:logging-interceptor:$ok_http_version"
    compile "com.google.code.gson:gson:$gson_version"

    compile "com.squareup.picasso:picasso:$picasso_version"
    compile "com.jakewharton.picasso:picasso2-okhttp3-downloader:$picasso_2_ok_http_3_version"

    compile "com.journeyapps:zxing-android-embedded:$zxing_embedded_version"
    compile "com.google.zxing:core:$zxing_version"

    compile "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    compile "com.facebook.stetho:stetho:$stetho_version"
    compile "com.facebook.stetho:stetho-okhttp:$stetho_version"
    compile "com.facebook.stetho:stetho-js-rhino:$stetho_version"

    compile("com.crashlytics.sdk.android:crashlytics:$crashlytics_version") {
        transitive = true;
    }

    compile "io.reactivex:rxandroid:$rx_android_version"
    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    compile "io.reactivex:rxjava:$rx_java_version"

    compile "io.realm:android-adapters:$realm_adapters_version"

    compile "com.trello:rxlifecycle:$rx_lifecycle_version"
    compile "com.trello:rxlifecycle-components:$rx_lifecycle_version"
    compile "com.trello:rxlifecycle-kotlin:$rx_lifecycle_version"
}

kapt {
    generateStubs = true
}

apply plugin: 'com.google.gms.google-services'